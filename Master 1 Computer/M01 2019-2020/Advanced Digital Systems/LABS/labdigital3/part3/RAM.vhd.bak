library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
entity ram is
port(   addr: in integer range 0 to 31;
     RW, CS : in std_logic;
    data_in : in std_logic_vector(3 downto 0);
   data_out : out std_logic_vector(3 downto 0));
end ram;

architecture arch of ram is
type ram_array is array (0 to 31) of std_logic_vector(3 downto 0); 
signal my_ram: ram_array;
--constant rom: ram_array :=( x"0",x"1",x"2",x"3",x"4",x"5",x"6",x"7",x"8",x"9",x"A",x"B",x"C",x"D",x"E",x"F",(others=> "0000"));


begin 
process( cs,rw,addr) is
begin
    if cs= '1' then
 case rw is
 when '1' => 
             data_out <= my_ram(addr);
 when '0' => data_out <= "ZZZZ";
             my_ram(addr)<= data_in  ;
 end case;
 else 
    data_out<= (others => 'Z');
 end if;
end process;
 
end arch; 
